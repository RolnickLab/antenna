# Generated by Django 4.2.10 on 2025-02-16 16:21

from django.db import migrations, models
import django.db.models.deletion
from django.utils import timezone


def transfer_m2m_data(apps, schema_editor):
    Pipeline = apps.get_model("ml", "Pipeline")
    ProjectPipelineConfig = apps.get_model("ml", "ProjectPipelineConfig")

    for pipeline in Pipeline.objects.only("id").all():
        existing_projects = Pipeline.projects.through.objects.filter(pipeline_id=pipeline).only("id").all()
        # Create new ProjectPipelineConfig entries
        for existing_project in existing_projects:
            ProjectPipelineConfig.objects.create(
                project=existing_project,
                pipeline=pipeline,
                date_added=timezone.now().date(),
                enabled=True,
                default_parameters={},
            )


class Migration(migrations.Migration):
    dependencies = [
        ("main", "0045_alter_classification_algorithm"),
        ("ml", "0017_alter_algorithm_unique_together"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectPipelineConfig",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField()),
                ("default_parameters", models.JSONField()),
                ("pipeline", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ml.pipeline")),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="main.project")),
            ],
            options={
                "verbose_name": "Project-Pipeline Configuration",
                "verbose_name_plural": "Project-Pipeline Configurations",
            },
        ),
        migrations.AddField(
            model_name="pipeline",
            name="new_projects",
            field=models.ManyToManyField(
                blank=True, related_name="new_pipelines", through="ml.ProjectPipelineConfig", to="main.Project"
            ),
        ),
        migrations.RunPython(transfer_m2m_data, reverse_code=migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="pipeline",
            name="projects",
        ),
        migrations.RenameField(
            model_name="pipeline",
            old_name="new_projects",
            new_name="projects",
        ),
        migrations.AlterField(
            model_name="pipeline",
            name="projects",
            field=models.ManyToManyField(
                blank=True, related_name="pipelines", through="ml.ProjectPipelineConfig", to="main.Project"
            ),
        ),
    ]
