# Generated by Django 4.2.10 on 2025-08-10 22:17

import ami.ml.schemas
from django.db import migrations, models
import django.db.models.deletion
import django_pydantic_field.fields


class Migration(migrations.Migration):
    dependencies = [
        ("main", "0060_alter_sourceimagecollection_method"),
        ("jobs", "0016_job_data_export_job_params_alter_job_job_type_key"),
    ]

    operations = [
        migrations.CreateModel(
            name="MLTaskRecord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("task_id", models.CharField(max_length=255)),
                (
                    "task_name",
                    models.CharField(
                        choices=[
                            ("process_pipeline_request", "process_pipeline_request"),
                            ("save_results", "save_results"),
                        ],
                        default="process_pipeline_request",
                        max_length=255,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("STARTED", "STARTED"), ("SUCCESS", "SUCCESS"), ("FAIL", "FAIL")],
                        default="STARTED",
                        max_length=255,
                    ),
                ),
                ("raw_results", models.JSONField(blank=True, default=dict, null=True)),
                ("raw_traceback", models.TextField(blank=True, null=True)),
                (
                    "pipeline_request",
                    django_pydantic_field.fields.PydanticSchemaField(
                        blank=True, config=None, null=True, schema=ami.ml.schemas.PipelineRequest
                    ),
                ),
                (
                    "pipeline_response",
                    django_pydantic_field.fields.PydanticSchemaField(
                        blank=True, config=None, null=True, schema=ami.ml.schemas.PipelineResultsResponse
                    ),
                ),
                ("num_captures", models.IntegerField(default=0, help_text="Same as number of source_images")),
                ("num_detections", models.IntegerField(default=0)),
                ("num_classifications", models.IntegerField(default=0)),
                ("subtask_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="ml_task_records", to="jobs.job"
                    ),
                ),
                ("source_images", models.ManyToManyField(related_name="ml_task_records", to="main.sourceimage")),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
